"""Build common libraries"""
import daos_build
import platform

def scons():
    """Execute build"""
    Import('env', 'prereqs')

    env.AppendUnique(LIBPATH=[Dir('.')])

    # Hack alert.   Add pmem to pmdk libs so libpmem is found
    # in the rpath.   It is normally only included by libpmemobj
    # but that library doesn't contain the installed location
    # in the rpath.
    prereqs.require(env, 'pmdk', 'argobots', 'cart', 'readline',
                    pmdk_libs=['pmemobj', 'pmem'])

    # TODO Need to make this generic. This probably will be
    # necessary in future.
    processor = platform.machine()
    arm_list = ["ARMv7", "armeabi", "aarch64", "arm64"]
    if processor.lower() in arm_list:
        prereqs.require(env, 'mercury', mercury_lib=['mchecksum'])
    else:
        prereqs.require(env, 'isal')

    denv = env.Clone()
    common_src = ['debug.c', 'mem.c', 'fail_loc.c', 'lru.c',
                  'misc.c', 'pool_map.c', 'proc.c', 'sort.c', 'btree.c',
                  'btree_class.c', 'tse.c', 'rsvc.c', 'checksum.c']
    common = daos_build.library(denv, 'libdaos_common', common_src)
    denv.Install('$PREFIX/lib/', common)

    tests_lib_src = ['tests_lib.c']
    tests_lib = daos_build.library(denv, 'libdaos_tests', tests_lib_src)
    denv.Install('$PREFIX/lib/', tests_lib)

    denv.Append(CPPPATH=['#/src/common'])
    SConscript('tests/SConscript', exports='denv')

if __name__ == "SCons.Script":
    scons()
