"""Build DAOS components"""
#pylint: disable=no-member
#pylint: disable=invalid-sequence-index


import os

def scons():
    """Execute build"""

    Import('env')

    gopath = "%s/build/control" % Dir('#').abspath
    gosrc = "%s/src/control" % Dir('#').abspath

    if os.path.isdir(gopath) is False:
        os.makedirs(gopath)
    if os.path.isdir("%s/src" % gopath) is False:
        os.symlink(gosrc, "%s/src" % gopath)

    env.Append(GOPATH=[gopath])
    env.AppendENVPath('GOPATH', env['GOPATH'])
    env['ENV']['GOBIN'] = "%s/bin" % gopath

    agentbin = "%s/bin/agent" % gopath
    agentsrc = "%s/agent/daos_agent.go" % gosrc
    env.Command(agentbin, agentsrc, "go install agent")
    env.InstallAs("$PREFIX/bin/daos_agent", agentbin)

    modulemgmt = "%s/modules/mgmt" % gosrc
    mgmtinitdb = "mgmtinit_db.json"
    env.InstallAs(os.path.join("$PREFIX/share/control", mgmtinitdb),
                  os.path.join(modulemgmt, mgmtinitdb))

    serverbin = "%s/bin/server" % gopath
    serversrc = "%s/server/daos_server.go" % gosrc
    env.Command(serverbin, serversrc, "go install server")
    env.InstallAs("$PREFIX/bin/daos_server", serverbin)

    shellbin = "%s/bin/shell" % gopath
    shellsrc = "%s/shell/DAOSShell.go" % gosrc
    env.Command(shellbin, shellsrc, "go install shell")
    env.InstallAs("$PREFIX/bin/DAOSShell", shellbin)

if __name__ == "SCons.Script":
    scons()
