// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/rank.proto

package rank

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Result of operation on a rank including resultant state.
type RankResult struct {
	Rank                 uint32   `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Action               string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Errored              bool     `protobuf:"varint,3,opt,name=errored,proto3" json:"errored,omitempty"`
	Msg                  string   `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	State                uint32   `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankResult) Reset()         { *m = RankResult{} }
func (m *RankResult) String() string { return proto.CompactTextString(m) }
func (*RankResult) ProtoMessage()    {}
func (*RankResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf270a9a3371f196, []int{0}
}

func (m *RankResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankResult.Unmarshal(m, b)
}
func (m *RankResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankResult.Marshal(b, m, deterministic)
}
func (m *RankResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankResult.Merge(m, src)
}
func (m *RankResult) XXX_Size() int {
	return xxx_messageInfo_RankResult.Size(m)
}
func (m *RankResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RankResult.DiscardUnknown(m)
}

var xxx_messageInfo_RankResult proto.InternalMessageInfo

func (m *RankResult) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *RankResult) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RankResult) GetErrored() bool {
	if m != nil {
		return m.Errored
	}
	return false
}

func (m *RankResult) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RankResult) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

// Generic request indicating which ranks to operate on.
// Used in gRPC fanout to operate on hosts with multiple ranks.
type RanksReq struct {
	Ranks                []uint32 `protobuf:"varint,1,rep,packed,name=ranks,proto3" json:"ranks,omitempty"`
	Timeout              float32  `protobuf:"fixed32,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RanksReq) Reset()         { *m = RanksReq{} }
func (m *RanksReq) String() string { return proto.CompactTextString(m) }
func (*RanksReq) ProtoMessage()    {}
func (*RanksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf270a9a3371f196, []int{1}
}

func (m *RanksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RanksReq.Unmarshal(m, b)
}
func (m *RanksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RanksReq.Marshal(b, m, deterministic)
}
func (m *RanksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RanksReq.Merge(m, src)
}
func (m *RanksReq) XXX_Size() int {
	return xxx_messageInfo_RanksReq.Size(m)
}
func (m *RanksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RanksReq.DiscardUnknown(m)
}

var xxx_messageInfo_RanksReq proto.InternalMessageInfo

func (m *RanksReq) GetRanks() []uint32 {
	if m != nil {
		return m.Ranks
	}
	return nil
}

func (m *RanksReq) GetTimeout() float32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RanksReq) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

// Generic response containing DER result from multiple ranks.
// Used in gRPC fanout to operate on hosts with multiple ranks.
type RanksResp struct {
	Results              []*RankResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RanksResp) Reset()         { *m = RanksResp{} }
func (m *RanksResp) String() string { return proto.CompactTextString(m) }
func (*RanksResp) ProtoMessage()    {}
func (*RanksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf270a9a3371f196, []int{2}
}

func (m *RanksResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RanksResp.Unmarshal(m, b)
}
func (m *RanksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RanksResp.Marshal(b, m, deterministic)
}
func (m *RanksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RanksResp.Merge(m, src)
}
func (m *RanksResp) XXX_Size() int {
	return xxx_messageInfo_RanksResp.Size(m)
}
func (m *RanksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RanksResp.DiscardUnknown(m)
}

var xxx_messageInfo_RanksResp proto.InternalMessageInfo

func (m *RanksResp) GetResults() []*RankResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*RankResult)(nil), "rank.RankResult")
	proto.RegisterType((*RanksReq)(nil), "rank.RanksReq")
	proto.RegisterType((*RanksResp)(nil), "rank.RanksResp")
}

func init() { proto.RegisterFile("common/rank.proto", fileDescriptor_bf270a9a3371f196) }

var fileDescriptor_bf270a9a3371f196 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xc9, 0xed, 0xfd, 0x1d, 0x11, 0xae, 0x83, 0x48, 0x96, 0xa1, 0xab, 0xe2, 0xe2, 0x0a,
	0xba, 0xf0, 0x35, 0x64, 0xde, 0x20, 0xd6, 0x28, 0x97, 0x9a, 0x4c, 0x4d, 0xd2, 0x8d, 0x4f, 0x2f,
	0x33, 0x6d, 0x71, 0x37, 0x5f, 0x38, 0x9c, 0x8f, 0x13, 0xb8, 0xeb, 0x39, 0x46, 0x4e, 0x4f, 0xd9,
	0xa7, 0xe1, 0x32, 0x66, 0xae, 0x8c, 0x5b, 0xb9, 0xdb, 0x5f, 0x00, 0xf2, 0x69, 0xa0, 0x50, 0xa6,
	0xef, 0x8a, 0x08, 0xfa, 0x6a, 0x8d, 0x33, 0xdd, 0x2d, 0xe9, 0x8d, 0x0f, 0xb0, 0xf7, 0x7d, 0xbd,
	0x72, 0xb2, 0x1b, 0x67, 0xba, 0x13, 0x2d, 0x84, 0x16, 0x0e, 0x21, 0x67, 0xce, 0xe1, 0xc3, 0x36,
	0xce, 0x74, 0x47, 0x5a, 0x11, 0xcf, 0xd0, 0xc4, 0xf2, 0x65, 0xb7, 0x1a, 0x97, 0x13, 0xef, 0x61,
	0x57, 0xaa, 0xaf, 0xc1, 0xee, 0xb4, 0x78, 0x86, 0xf6, 0x0d, 0x8e, 0xe2, 0x2e, 0x14, 0x7e, 0x24,
	0x21, 0xb6, 0x62, 0x8d, 0x6b, 0x24, 0xa1, 0x20, 0x8e, 0x7a, 0x8d, 0x81, 0xa7, 0xaa, 0xf2, 0x0d,
	0xad, 0x28, 0xf9, 0x4f, 0xce, 0x7d, 0x58, 0xdc, 0x33, 0xb4, 0xaf, 0x70, 0x5a, 0x1a, 0xcb, 0x88,
	0x8f, 0x70, 0xc8, 0x3a, 0x6b, 0x2e, 0xbd, 0x79, 0x3e, 0x5f, 0x74, 0xfe, 0xff, 0x5e, 0x5a, 0x03,
	0xef, 0x7b, 0xfd, 0x93, 0x97, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x6f, 0xf1, 0x97, 0x28,
	0x01, 0x00, 0x00,
}
