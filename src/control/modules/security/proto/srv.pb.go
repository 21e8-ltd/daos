// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srv.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SecurityControlClient is the client API for SecurityControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecurityControlClient interface {
	SecurityAction(ctx context.Context, in *SecurityRequest, opts ...grpc.CallOption) (*SecurityReply, error)
}

type securityControlClient struct {
	cc *grpc.ClientConn
}

func NewSecurityControlClient(cc *grpc.ClientConn) SecurityControlClient {
	return &securityControlClient{cc}
}

func (c *securityControlClient) SecurityAction(ctx context.Context, in *SecurityRequest, opts ...grpc.CallOption) (*SecurityReply, error) {
	out := new(SecurityReply)
	err := c.cc.Invoke(ctx, "/proto.SecurityControl/SecurityAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecurityControlServer is the server API for SecurityControl service.
type SecurityControlServer interface {
	SecurityAction(context.Context, *SecurityRequest) (*SecurityReply, error)
}

func RegisterSecurityControlServer(s *grpc.Server, srv SecurityControlServer) {
	s.RegisterService(&_SecurityControl_serviceDesc, srv)
}

func _SecurityControl_SecurityAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecurityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecurityControlServer).SecurityAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.SecurityControl/SecurityAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecurityControlServer).SecurityAction(ctx, req.(*SecurityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecurityControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.SecurityControl",
	HandlerType: (*SecurityControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SecurityAction",
			Handler:    _SecurityControl_SecurityAction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "srv.proto",
}

func init() { proto.RegisterFile("srv.proto", fileDescriptor_srv_ba7afe570e8dd1fa) }

var fileDescriptor_srv_ba7afe570e8dd1fa = []byte{
	// 104 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2e, 0x2a, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x7c, 0xc5, 0xa9, 0xc9, 0xa5, 0x45,
	0x99, 0x25, 0x95, 0x10, 0x61, 0xa3, 0x60, 0x2e, 0xfe, 0x60, 0xa8, 0x88, 0x73, 0x7e, 0x5e, 0x49,
	0x51, 0x7e, 0x8e, 0x90, 0x03, 0x17, 0x1f, 0x4c, 0xc8, 0x31, 0xb9, 0x24, 0x33, 0x3f, 0x4f, 0x48,
	0x0c, 0xa2, 0x58, 0x0f, 0x26, 0x1c, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x25, 0x82, 0x21,
	0x5e, 0x90, 0x53, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x16, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xa2, 0x9e, 0xc0, 0xaf, 0x7f, 0x00, 0x00, 0x00,
}
